networks:
  app-network:
    driver: bridge

services:
  app:
    build:
      context: .
    container_name: tasklist
    networks:
      - app-network
    depends_on:
      - db
      - minio
      - redis
    env_file:
      - .env
    ports:
      - '8085:8080'

  db:
      image: mysql:9.0.0
      container_name: mySQL
      networks:
        - app-network
      environment:
        MYSQL_DATABASE: ${DB_NAME}
        MYSQL_USERNAME: ${DB_USERNAME}
        MYSQL_PASSWORD: ${DB_PASSWORD}
      ports:
        - '3306:3306'

      volumes:
        - './src/main/resources/db-init:/docker-entrypoint-initdb.d'
        - 'db-data:/var/lib/mysql'

  redis:
    image: redis:7.4.0-bookworm
    restart: always
    container_name: redis
    networks:
      - app-network
    env_file:
      - .env
    ports:
      - '6379:6379'
    volumes:
      - 'cache:/data'
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}

  minio:
    image: minio/minio:latest
    container_name: minio
    networks:
      - app-network
    env_file:
      - .env
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY}
    command: server ~/minio --console-address :9090
    ports:
      - '9090:9090'
      - '9000:9000'
    volumes:
      - 'minio-data:/minio'

volumes:
  db-data:
    driver: local
  minio-data:
    driver: local
  cache:
    driver: local
